defmod Gastherme MQTT_DEVICE
attr Gastherme userattr subscribeReading_state  subscribeReading_send subscribeReading_Status
attr Gastherme IODev mqtt
attr Gastherme event-min-interval Status:1800,send:1800
attr Gastherme event-on-change-reading Status,send
attr Gastherme publishSet 0 1 /Kueche/Gastherme
attr Gastherme room MQTT,Küche
attr Gastherme stateFormat {if(ReadingsNum("Gastherme","state",0)==0) {"off"} else {"on"}}
attr Gastherme subscribeReading_Status /Kueche/waterHeater
attr Gastherme subscribeReading_send /Kueche/Gastherme
attr Gastherme subscribeReading_state /Kueche/waterHeater
attr Gastherme webCmd 0 : 1

defmod GasthermeLog FileLog ./log/GasTherme-%Y.log Gastherme:Status:.*|Gastherme:send:.*

defmod n_RickHeizungAnTherme notify Rick_Heizung_TempList:ValvePosition:.* {\
my $myValvePos = ReadingsNum($NAME, "ValvePosition",0);;\
my $SandraValvePos = ReadingsNum("Sandra_Heizung_TempList", "ValvePosition",0);;\
if ($myValvePos > 0){\
	fhem("set Gastherme 1");;\
}\
if($myValvePos == 0 && $SandraValvePos == 0){\
	fhem("set Gastherme 0");;\
}\
}

defmod n_SandraHeizungAnTherme notify Sandra_Heizung_TempList:ValvePosition:.* {\
	my $myValvePos = ReadingsNum($NAME, "ValvePosition",0);;\
	my $RickValvePos = ReadingsNum("Rick_Heizung_TempList", "ValvePosition",0);;\
	if ($myValvePos > 0){\
		fhem("set Gastherme 1");;\
	}\
	if($myValvePos == 0 && $RickValvePos == 0){\
		fhem("set Gastherme 0");;\
	}\
}

setstate Gastherme on
setstate Gastherme 2018-03-11 16:59:43 Status 1
setstate Gastherme 2018-03-11 21:19:12 send 1
setstate Gastherme 2018-03-11 21:19:11 state 1
setstate Gastherme 2018-03-11 21:19:12 transmission-state incoming publish received

setstate GasthermeLog active
setstate GasthermeLog 2018-03-11 20:56:34 linesInTheFile 77354

setstate n_RickHeizungAnTherme 2018-03-11 21:19:11
setstate n_RickHeizungAnTherme 2018-03-04 08:28:52 state active

setstate n_SandraHeizungAnTherme 2018-03-10 06:50:47
setstate n_SandraHeizungAnTherme 2018-03-04 08:28:51 state active

